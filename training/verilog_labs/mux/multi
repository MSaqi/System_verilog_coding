#! /usr/bin/vvp
:ivl_version "10.3 (stable)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision + 0;
:vpi_module "system";
:vpi_module "vhdl_sys";
:vpi_module "v2005_math";
:vpi_module "va_math";
S_0x561bfbdfd100 .scope module, "multiplexor_test" "multiplexor_test" 2 1;
 .timescale 0 0;
P_0x561bfbdfd280 .param/l "WIDTH" 1 2 3, +C4<00000000000000000000000000000101>;
v0x561bfbe4afa0_0 .var "in0", 4 0;
v0x561bfbe4b080_0 .var "in1", 4 0;
v0x561bfbe4b150_0 .net "mux_out", 4 0, v0x561bfbe4ad40_0;  1 drivers
v0x561bfbe4b250_0 .var "sel", 0 0;
S_0x561bfbe37000 .scope task, "expect" "expect" 2 22, 2 22 0, S_0x561bfbdfd100;
 .timescale 0 0;
v0x561bfbe371d0_0 .var "exp_out", 4 0;
TD_multiplexor_test.expect ;
    %load/vec4 v0x561bfbe4b150_0;
    %load/vec4 v0x561bfbe371d0_0;
    %cmp/ne;
    %jmp/0xz  T_0.0, 6;
    %vpi_call 2 26 "$display", "TEST FAILED" {0 0 0};
    %vpi_call 2 27 "$display", "At time %0d sel=%b in0=%b in1=%b mux_out=%b", $time, v0x561bfbe4b250_0, v0x561bfbe4afa0_0, v0x561bfbe4b080_0, v0x561bfbe4b150_0 {0 0 0};
    %vpi_call 2 29 "$display", "mux_out should be %b", v0x561bfbe371d0_0 {0 0 0};
    %vpi_call 2 30 "$finish" {0 0 0};
    %jmp T_0.1;
T_0.0 ;
    %vpi_call 2 34 "$display", "At time %0d sel=%b in0=%b in1=%b, mux_out=%b", $time, v0x561bfbe4b250_0, v0x561bfbe4afa0_0, v0x561bfbe4b080_0, v0x561bfbe4b150_0 {0 0 0};
T_0.1 ;
    %end;
S_0x561bfbe4a850 .scope module, "multiplexor_inst" "multiplexor" 2 14, 3 8 0, S_0x561bfbdfd100;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "sel"
    .port_info 1 /INPUT 5 "in0"
    .port_info 2 /INPUT 5 "in1"
    .port_info 3 /OUTPUT 5 "mux_out"
P_0x561bfbe4aa40 .param/l "WIDTH" 0 3 8, +C4<00000000000000000000000000000101>;
v0x561bfbe4ab60_0 .net "in0", 4 0, v0x561bfbe4afa0_0;  1 drivers
v0x561bfbe4ac60_0 .net "in1", 4 0, v0x561bfbe4b080_0;  1 drivers
v0x561bfbe4ad40_0 .var "mux_out", 4 0;
v0x561bfbe4ae30_0 .net "sel", 0 0, v0x561bfbe4b250_0;  1 drivers
E_0x561bfbdfd6d0 .event edge, v0x561bfbe4ae30_0, v0x561bfbe4ac60_0, v0x561bfbe4ab60_0;
    .scope S_0x561bfbe4a850;
T_1 ;
    %wait E_0x561bfbdfd6d0;
    %load/vec4 v0x561bfbe4ae30_0;
    %flag_set/vec4 8;
    %jmp/0 T_1.0, 8;
    %load/vec4 v0x561bfbe4ac60_0;
    %jmp/1 T_1.1, 8;
T_1.0 ; End of true expr.
    %load/vec4 v0x561bfbe4ab60_0;
    %jmp/0 T_1.1, 8;
 ; End of false expr.
    %blend;
T_1.1;
    %store/vec4 v0x561bfbe4ad40_0, 0, 5;
    %jmp T_1;
    .thread T_1, $push;
    .scope S_0x561bfbdfd100;
T_2 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x561bfbe4b250_0, 0, 1;
    %pushi/vec4 21, 0, 5;
    %store/vec4 v0x561bfbe4afa0_0, 0, 5;
    %pushi/vec4 0, 0, 5;
    %store/vec4 v0x561bfbe4b080_0, 0, 5;
    %delay 1, 0;
    %pushi/vec4 21, 0, 5;
    %store/vec4 v0x561bfbe371d0_0, 0, 5;
    %fork TD_multiplexor_test.expect, S_0x561bfbe37000;
    %join;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x561bfbe4b250_0, 0, 1;
    %pushi/vec4 10, 0, 5;
    %store/vec4 v0x561bfbe4afa0_0, 0, 5;
    %pushi/vec4 0, 0, 5;
    %store/vec4 v0x561bfbe4b080_0, 0, 5;
    %delay 1, 0;
    %pushi/vec4 10, 0, 5;
    %store/vec4 v0x561bfbe371d0_0, 0, 5;
    %fork TD_multiplexor_test.expect, S_0x561bfbe37000;
    %join;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x561bfbe4b250_0, 0, 1;
    %pushi/vec4 0, 0, 5;
    %store/vec4 v0x561bfbe4afa0_0, 0, 5;
    %pushi/vec4 21, 0, 5;
    %store/vec4 v0x561bfbe4b080_0, 0, 5;
    %delay 1, 0;
    %pushi/vec4 21, 0, 5;
    %store/vec4 v0x561bfbe371d0_0, 0, 5;
    %fork TD_multiplexor_test.expect, S_0x561bfbe37000;
    %join;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x561bfbe4b250_0, 0, 1;
    %pushi/vec4 0, 0, 5;
    %store/vec4 v0x561bfbe4afa0_0, 0, 5;
    %pushi/vec4 10, 0, 5;
    %store/vec4 v0x561bfbe4b080_0, 0, 5;
    %delay 1, 0;
    %pushi/vec4 10, 0, 5;
    %store/vec4 v0x561bfbe371d0_0, 0, 5;
    %fork TD_multiplexor_test.expect, S_0x561bfbe37000;
    %join;
    %vpi_call 2 45 "$display", "TEST PASSED" {0 0 0};
    %vpi_call 2 46 "$finish" {0 0 0};
    %end;
    .thread T_2;
# The file index is used to find the file name in the following table.
:file_names 4;
    "N/A";
    "<interactive>";
    "multiplexor_test.v";
    "multiplexor.v";
